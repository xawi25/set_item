//dosya sonuna ekle

#if defined(ENABLE_SET_ITEM)
#include "Packet.h"
typedef struct SApplyInfo
{
	BYTE bApplyType;
	BYTE bPointType;
} TApplyInfo;

const TApplyInfo aApplyInfo[CItemData::MAX_APPLY_NUM] =
{
	{ CItemData::	APPLY_NONE,	 POINT_NONE,		},
	{ CItemData::	APPLY_MAX_HP,	 POINT_MAX_HP,		},
	{ CItemData::	APPLY_MAX_SP,	 POINT_MAX_SP,		},
	{ CItemData::	APPLY_CON,	 POINT_HT,		},
	{ CItemData::	APPLY_INT,	 POINT_IQ,		},
	{ CItemData::	APPLY_STR, POINT_ST,			},
	{ CItemData::	APPLY_DEX,	 POINT_DX,		},
	{ CItemData::	APPLY_ATT_SPEED,	 POINT_ATT_SPEED,		},
	{ CItemData::	APPLY_MOV_SPEED,	 POINT_MOV_SPEED,		},
	{ CItemData::	APPLY_CAST_SPEED,	 POINT_CASTING_SPEED,		},
	{ CItemData::	APPLY_HP_REGEN,	 POINT_HP_REGEN,		},
	{ CItemData::	APPLY_SP_REGEN,	 POINT_SP_REGEN,		},
	{ CItemData::	APPLY_POISON_PCT,	 POINT_POISON_PCT,		},
	{ CItemData::	APPLY_STUN_PCT,	 POINT_STUN_PCT,		},
	{ CItemData::	APPLY_SLOW_PCT,	 POINT_SLOW_PCT,		},
	{ CItemData::	APPLY_CRITICAL_PCT,	 POINT_CRITICAL_PCT,		},
	{ CItemData::	APPLY_PENETRATE_PCT,	 POINT_PENETRATE_PCT,		},
	{ CItemData::	APPLY_ATTBONUS_HUMAN,	 POINT_ATTBONUS_HUMAN,		},
	{ CItemData::	APPLY_ATTBONUS_ANIMAL,	 POINT_ATTBONUS_ANIMAL,		},
	{ CItemData::	APPLY_ATTBONUS_ORC,	 POINT_ATTBONUS_ORC,		},
	{ CItemData::	APPLY_ATTBONUS_MILGYO,	 POINT_ATTBONUS_MILGYO,		},
	{ CItemData::	APPLY_ATTBONUS_UNDEAD,	 POINT_ATTBONUS_UNDEAD,		},
	{ CItemData::	APPLY_ATTBONUS_DEVIL,	 POINT_ATTBONUS_DEVIL,		},
	{ CItemData::	APPLY_STEAL_HP,	 POINT_STEAL_HP,		},
	{ CItemData::	APPLY_STEAL_SP,	 POINT_STEAL_SP,		},
	{ CItemData::	APPLY_MANA_BURN_PCT,	 POINT_MANA_BURN_PCT,		},
	{ CItemData::	APPLY_DAMAGE_SP_RECOVER,	 POINT_DAMAGE_SP_RECOVER,		},
	{ CItemData::	APPLY_BLOCK,	 POINT_BLOCK,		},
	{ CItemData::	APPLY_DODGE,	 POINT_DODGE,		},
	{ CItemData::	APPLY_RESIST_SWORD,	 POINT_RESIST_SWORD,		},
	{ CItemData::	APPLY_RESIST_TWOHAND,	 POINT_RESIST_TWOHAND,		},
	{ CItemData::	APPLY_RESIST_DAGGER,	 POINT_RESIST_DAGGER,		},
	{ CItemData::	APPLY_RESIST_BELL,	 POINT_RESIST_BELL,		},
	{ CItemData::	APPLY_RESIST_FAN,	 POINT_RESIST_FAN,		},
	{ CItemData::	APPLY_RESIST_BOW,	 POINT_RESIST_BOW,		},
	{ CItemData::	APPLY_RESIST_FIRE,	 POINT_RESIST_FIRE,		},
	{ CItemData::	APPLY_RESIST_ELEC,	 POINT_RESIST_ELEC,		},
	{ CItemData::	APPLY_RESIST_MAGIC,	 POINT_RESIST_MAGIC,		},
	{ CItemData::	APPLY_RESIST_WIND,	 POINT_RESIST_WIND,		},
	{ CItemData::	APPLY_REFLECT_MELEE,	 POINT_REFLECT_MELEE,		},
	{ CItemData::	APPLY_REFLECT_CURSE,	 POINT_REFLECT_CURSE,		},
	{ CItemData::	APPLY_POISON_REDUCE,	 POINT_POISON_REDUCE,		},
	{ CItemData::	APPLY_KILL_SP_RECOVER,	 POINT_KILL_SP_RECOVER,		},
	{ CItemData::	APPLY_EXP_DOUBLE_BONUS,	 POINT_EXP_DOUBLE_BONUS,		},
	{ CItemData::	APPLY_GOLD_DOUBLE_BONUS, POINT_GOLD_DOUBLE_BONUS,			},
	{ CItemData::	APPLY_ITEM_DROP_BONUS,	 POINT_ITEM_DROP_BONUS,		},
	{ CItemData::	APPLY_POTION_BONUS,	 POINT_POTION_BONUS,		},
	{ CItemData::	APPLY_KILL_HP_RECOVER,	 POINT_NONE,		},
	{ CItemData::	APPLY_IMMUNE_STUN,	 POINT_IMMUNE_STUN,		},
	{ CItemData::	APPLY_IMMUNE_SLOW,	 POINT_IMMUNE_SLOW,		},
	{ CItemData::	APPLY_IMMUNE_FALL,	 POINT_IMMUNE_FALL,		},
	{ CItemData::	APPLY_SKILL,	 POINT_NONE,		},
	{ CItemData::	APPLY_BOW_DISTANCE,	 POINT_BOW_DISTANCE,		},
	{ CItemData::	APPLY_ATT_GRADE_BONUS,	 POINT_ATT_GRADE_BONUS,		},
	{ CItemData::	APPLY_DEF_GRADE_BONUS,	 POINT_DEF_GRADE_BONUS,		},
	{ CItemData::	APPLY_MAGIC_ATT_GRADE,	 POINT_MAGIC_ATT_GRADE_BONUS,		},
	{ CItemData::	APPLY_MAGIC_DEF_GRADE,	 POINT_MAGIC_DEF_GRADE_BONUS,		},
	{ CItemData::	APPLY_CURSE_PCT,	 POINT_CURSE_PCT,		},
	{ CItemData::	APPLY_MAX_STAMINA,	 POINT_MAX_STAMINA,		},
};

BYTE ApplyTypeToPointType(BYTE bApplyType)
{
	if (bApplyType >= CItemData::MAX_APPLY_NUM)
		return POINT_NONE;
	else
		return aApplyInfo[bApplyType].bPointType;
}

BYTE PointTypeToApplyType(BYTE bPointType)
{
	for (int i = 0; i < CItemData::MAX_APPLY_NUM; i++)
	{
		if (aApplyInfo[i].bPointType == bPointType)
			return aApplyInfo[i].bApplyType;
	}
	return CItemData::APPLY_NONE;
}
#endif